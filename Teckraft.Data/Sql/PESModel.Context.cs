//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Teckraft.Data.Sql
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;


    public partial class InitiativeHubFinalEntities : DbContext
    {
        public InitiativeHubFinalEntities()
            : base("name=InitiativeHubFinalEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<ChapterOwnerMapping> ChapterOwnerMappings { get; set; }
        public DbSet<CurrentUserSession> CurrentUserSessions { get; set; }
        public DbSet<Division> Divisions { get; set; }
        public DbSet<EventLog> EventLogs { get; set; }
        public DbSet<UserProfile> UserProfiles { get; set; }
        public DbSet<webpages_Membership> webpages_Membership { get; set; }
        public DbSet<webpages_OAuthMembership> webpages_OAuthMembership { get; set; }
        public DbSet<webpages_Roles> webpages_Roles { get; set; }
        public DbSet<webpages_UsersInRoles> webpages_UsersInRoles { get; set; }
        public DbSet<UserDetail> UserDetails { get; set; }
        public DbSet<StatusMaster> StatusMasters { get; set; }
        public DbSet<ChapterMaster> ChapterMasters { get; set; }
        public DbSet<IssueManagementCommentLog> IssueManagementCommentLogs { get; set; }
        public DbSet<IssueManagementAnchorComment> IssueManagementAnchorComments { get; set; }
        public DbSet<UserWiseColumnName> UserWiseColumnNames { get; set; }
    
        public virtual ObjectResult<spGetColorCode_Result> spGetColorCode(Nullable<int> initiativeId, Nullable<int> milesoneId)
        {
            var initiativeIdParameter = initiativeId.HasValue ?
                new ObjectParameter("initiativeId", initiativeId) :
                new ObjectParameter("initiativeId", typeof(int));
    
            var milesoneIdParameter = milesoneId.HasValue ?
                new ObjectParameter("milesoneId", milesoneId) :
                new ObjectParameter("milesoneId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetColorCode_Result>("spGetColorCode", initiativeIdParameter, milesoneIdParameter);
        }
    
        public virtual ObjectResult<spGetColorCodeforMilestone_Result> spGetColorCodeforMilestone(Nullable<int> milestoneId)
        {
            var milestoneIdParameter = milestoneId.HasValue ?
                new ObjectParameter("milestoneId", milestoneId) :
                new ObjectParameter("milestoneId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetColorCodeforMilestone_Result>("spGetColorCodeforMilestone", milestoneIdParameter);
        }
    
        public virtual ObjectResult<spGetCommentLog_Result> spGetCommentLog(Nullable<int> milestoneId)
        {
            var milestoneIdParameter = milestoneId.HasValue ?
                new ObjectParameter("milestoneId", milestoneId) :
                new ObjectParameter("milestoneId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetCommentLog_Result>("spGetCommentLog", milestoneIdParameter);
        }
    
        public virtual ObjectResult<spAllData_Result> spAllData()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spAllData_Result>("spAllData");
        }
    
        public virtual ObjectResult<spMilestoneLogDetails_Result> spMilestoneLogDetails(Nullable<int> milestoneId)
        {
            var milestoneIdParameter = milestoneId.HasValue ?
                new ObjectParameter("milestoneId", milestoneId) :
                new ObjectParameter("milestoneId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spMilestoneLogDetails_Result>("spMilestoneLogDetails", milestoneIdParameter);
        }
    
        public virtual ObjectResult<spGetTSIDetail_Result> spGetTSIDetail(string userName, ObjectParameter tSICode, ObjectParameter tSIDesc)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetTSIDetail_Result>("spGetTSIDetail", userNameParameter, tSICode, tSIDesc);
        }
    
        public virtual int spGetTSIDetailH2(string userName, ObjectParameter empSHCode)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGetTSIDetailH2", userNameParameter, empSHCode);
        }
    
        public virtual ObjectResult<spDealerFeedbackDetail_Result> spDealerFeedbackDetail()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spDealerFeedbackDetail_Result>("spDealerFeedbackDetail");
        }
    
        public virtual ObjectResult<spGetChaptersforResponsiblePerson_Result> spGetChaptersforResponsiblePerson(string responsibleEmail, string owner)
        {
            var responsibleEmailParameter = responsibleEmail != null ?
                new ObjectParameter("ResponsibleEmail", responsibleEmail) :
                new ObjectParameter("ResponsibleEmail", typeof(string));
    
            var ownerParameter = owner != null ?
                new ObjectParameter("Owner", owner) :
                new ObjectParameter("Owner", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetChaptersforResponsiblePerson_Result>("spGetChaptersforResponsiblePerson", responsibleEmailParameter, ownerParameter);
        }
    
        public virtual ObjectResult<spIssueDetails1_Result> spIssueDetails1(string responsibleEmail, string chapterName, string owner, string roleName, string userName)
        {
            var responsibleEmailParameter = responsibleEmail != null ?
                new ObjectParameter("ResponsibleEmail", responsibleEmail) :
                new ObjectParameter("ResponsibleEmail", typeof(string));
    
            var chapterNameParameter = chapterName != null ?
                new ObjectParameter("ChapterName", chapterName) :
                new ObjectParameter("ChapterName", typeof(string));
    
            var ownerParameter = owner != null ?
                new ObjectParameter("Owner", owner) :
                new ObjectParameter("Owner", typeof(string));
    
            var roleNameParameter = roleName != null ?
                new ObjectParameter("RoleName", roleName) :
                new ObjectParameter("RoleName", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spIssueDetails1_Result>("spIssueDetails1", responsibleEmailParameter, chapterNameParameter, ownerParameter, roleNameParameter, userNameParameter);
        }
    
        public virtual ObjectResult<spDivisionCount_Result> spDivisionCount(string chapterName, string role, string email)
        {
            var chapterNameParameter = chapterName != null ?
                new ObjectParameter("ChapterName", chapterName) :
                new ObjectParameter("ChapterName", typeof(string));
    
            var roleParameter = role != null ?
                new ObjectParameter("Role", role) :
                new ObjectParameter("Role", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spDivisionCount_Result>("spDivisionCount", chapterNameParameter, roleParameter, emailParameter);
        }
    
        public virtual ObjectResult<spHodCount_Result> spHodCount(string chapterName, string role, string email)
        {
            var chapterNameParameter = chapterName != null ?
                new ObjectParameter("ChapterName", chapterName) :
                new ObjectParameter("ChapterName", typeof(string));
    
            var roleParameter = role != null ?
                new ObjectParameter("Role", role) :
                new ObjectParameter("Role", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spHodCount_Result>("spHodCount", chapterNameParameter, roleParameter, emailParameter);
        }
    
        public virtual ObjectResult<spHodName_Result> spHodName(string chapterName, string role, string email)
        {
            var chapterNameParameter = chapterName != null ?
                new ObjectParameter("ChapterName", chapterName) :
                new ObjectParameter("ChapterName", typeof(string));
    
            var roleParameter = role != null ?
                new ObjectParameter("Role", role) :
                new ObjectParameter("Role", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spHodName_Result>("spHodName", chapterNameParameter, roleParameter, emailParameter);
        }
    
        public virtual ObjectResult<SpissuedetailsClose_Result> SpissuedetailsClose(string chapterName)
        {
            var chapterNameParameter = chapterName != null ?
                new ObjectParameter("ChapterName", chapterName) :
                new ObjectParameter("ChapterName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpissuedetailsClose_Result>("SpissuedetailsClose", chapterNameParameter);
        }
    
        public virtual ObjectResult<spIssueDetails_Result1> spIssueDetails(string division, string responsibleEmail, string chapterName, string owner, string roleName, string userName)
        {
            var divisionParameter = division != null ?
                new ObjectParameter("Division", division) :
                new ObjectParameter("Division", typeof(string));
    
            var responsibleEmailParameter = responsibleEmail != null ?
                new ObjectParameter("ResponsibleEmail", responsibleEmail) :
                new ObjectParameter("ResponsibleEmail", typeof(string));
    
            var chapterNameParameter = chapterName != null ?
                new ObjectParameter("ChapterName", chapterName) :
                new ObjectParameter("ChapterName", typeof(string));
    
            var ownerParameter = owner != null ?
                new ObjectParameter("Owner", owner) :
                new ObjectParameter("Owner", typeof(string));
    
            var roleNameParameter = roleName != null ?
                new ObjectParameter("RoleName", roleName) :
                new ObjectParameter("RoleName", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spIssueDetails_Result1>("spIssueDetails", divisionParameter, responsibleEmailParameter, chapterNameParameter, ownerParameter, roleNameParameter, userNameParameter);
        }
    
        public virtual ObjectResult<spGetChaptersNameforResponsiblePerson_Result> spGetChaptersNameforResponsiblePerson(string responsibleEmail, string owner, string chapterName)
        {
            var responsibleEmailParameter = responsibleEmail != null ?
                new ObjectParameter("ResponsibleEmail", responsibleEmail) :
                new ObjectParameter("ResponsibleEmail", typeof(string));
    
            var ownerParameter = owner != null ?
                new ObjectParameter("Owner", owner) :
                new ObjectParameter("Owner", typeof(string));
    
            var chapterNameParameter = chapterName != null ?
                new ObjectParameter("ChapterName", chapterName) :
                new ObjectParameter("ChapterName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetChaptersNameforResponsiblePerson_Result>("spGetChaptersNameforResponsiblePerson", responsibleEmailParameter, ownerParameter, chapterNameParameter);
        }
    
        public virtual ObjectResult<GetCSCDataBYRequestNo_Result> GetCSCDataBYRequestNo(string requestCode)
        {
            var requestCodeParameter = requestCode != null ?
                new ObjectParameter("RequestCode", requestCode) :
                new ObjectParameter("RequestCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCSCDataBYRequestNo_Result>("GetCSCDataBYRequestNo", requestCodeParameter);
        }
    }
}
